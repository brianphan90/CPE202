{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1. What type of value is a hash code? Integer value\
 2. Hash codes can be both positive and negative. How does a hash code get converted into a value that can be used in a hash table? Picking a size for our list and then dividing the positive or negative hash value and using its remainder as the index into the list.\
3. Once you find the proper location with a hash table, how do you know if the item you are looking for is in the table or not? Be careful to answer this completely. If the remainder falls between the list valid list indicies because there are only so many finite hash values since they are integers.\
 4. Why is a collision resolution strategy needed when working with a hash table? It is needed because there are times when trying to hash two items returns the same remainder or index. They can not be both stored at the same location because this defeats the purpose of a hashset. 5. What is the difference between a map and a set? A set is a collection that does not allow duplicate values, while a map contains keys that map to the values.\
7. How does the load factor affect the complexity of the membership test on the set datatype? If the load factor is too big that means that the list is also becoming too big for high efficiency. This means that membership test will no longer be O(1)\
 8. What is rehashing?\
Rehashing is transferring values to a new list that is a larger size than the last to maintain efficiency.}